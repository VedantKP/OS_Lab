ASSIGNMENT No: 1
Shell Programming

AIM:
Write a program to implement an address book with options given below:
1. a) Create address book.
2. b) View address book.
3. c) Insert a record.
4. d) Delete a record.
5. e) Modify a record.
6. f) Exit.

--------------------------------------------------------------------------------------------

ASSIGNMENT No: 2
Process Control System Calls

AIM:
Process control system calls: The demonstration of FORK, EXECVE and WAIT system
calls along with zombie and orphan states.
1. Implement the C program in which main program accepts the integers to be sorted.
Main program uses the FORK system call to create a new process called a child
process. Parent process sorts the integers using sorting algorithm and waits for child
process using WAIT system call to sort the integers using any sorting algorithm.
2. Implement the C program in which main program accepts an integer array. Main
program uses the FORK system call to create a new process called a child process.
Parent process sorts an integer array and passes the sorted array to child process
through the command line arguments of EXECVE system call. The child process
uses EXECVE system call to load new program that uses this sorted array for
performing the binary search to search the particular item in the array.


--------------------------------------------------------------------------------------------

ASSIGNMENT No: 3

AIM : Matrix Multiplication using POSIX pthreads

--------------------------------------------------------------------------------------------

ASSIGNMENT NO: 4

AIM: Application to demonstrate producer-consumer problem with counting semaphores
and mutex.

--------------------------------------------------------------------------------------------

ASSIGNMENT NO: 5

AIM: Application to demonstrate Reader-Writer problem with reader priority.

--------------------------------------------------------------------------------------------

ASSIGNMENT NO: 6

AIM: To implement Dining Philosopher’s problem using ‘C’ in Linux

--------------------------------------------------------------------------------------------

ASSIGNMENT NO: 7(a)

AIM: Inter process communication in Linux using pipes.

Implementation of Full duplex communication between parent and child processes. Parent
process writes a pathname of a file (the contents of the file are desired) on one pipe to be
read by child process and child process writes the contents of the file on second pipe to be
read by parent process and displays on standard output.

--------------------------------------------------------------------------------------------

ASSIGNMENT NO: 7(b)

AIM: Inter process communication in Linux using FIFOs.

Implementation of Full duplex communication between two independent processes. First
process accepts sentences and writes on one pipe to be read by second process and second
process counts number of characters, number of words and number of lines in accepted
sentences, writes this output in a text file and writes the contents of the file on second pipe
to be read by first process and displays on standard output.

--------------------------------------------------------------------------------------------

ASSSIGNMENT NO:	8

AIM: Application to demonstrate: Client and Server Programs in which server process
creates a shared memory segment and write the message to the shared memory segment.
Client process reads the message from the shared memory segment and displays it to the
screen.

--------------------------------------------------------------------------------------------

ASSIGNMENT No: 9
AIM
File Handling System Calls: Implement an assignment using File Handling System Calls
(Low level system calls like open, read, write, etc).

--------------------------------------------------------------------------------------------
